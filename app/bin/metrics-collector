#!/usr/bin/env ruby
require_relative '../config/defaults'
Thread.abort_on_exception = true
STDOUT.sync = true

first_try = true
begin
  $logger.debug { "Creating mongodb indexes" }
  Mongoid::Tasks::Database::create_indexes
rescue => e
  if first_try
    $logger.info { "Index change detected; recreating" }
    Mongoid::Tasks::Database::remove_indexes
    retry
  else
    raise e
  end
end


$logger.info 'Initializing Kubernetes Metrics Collector'

config = Inventory::load_configuration($logger)

collector = MetricsCollector.new(config)
collection_interval = ENV['METRICS_COLLECTION_INTERVAL']&.to_i || 30

$logger.info { "OpenShift metrics collector initialized to meter every #{collection_interval} seconds" }

t1 = Thread.new {
  loop {
    collector.collect_container_stats
    File.write("/tmp/heartbeat", "")  # for kubernetes health check
    sleep(collection_interval) } }

t2 = Thread.new {
  loop {
    collector.collect_pod_summaries
    sleep(collection_interval) } }

t1.join
