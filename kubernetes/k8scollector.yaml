apiVersion: v1
kind: Namespace
metadata:
  name: 6fusion-kubernetes-collector
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: 6fusion-k8scollector
  namespace: 6fusion-kubernetes-collector
---
apiVersion: v1
kind: Secret
metadata:
  name: kube-secret
  namespace: 6fusion-kubernetes-collector
data:
  kube-host: "BASE64_VALUE"              # IP address or domain of the kubernetes API server
  kube-port: "BASE64_VALUE"              # Port of the kubernetes API server
  kube-token: "BASE64_VALUE"             # Token of the kubernetes API server (specify only for a remote Kube API Server)
  kube-use-ssl: "BASE64_VALUE"           # Use 1 for true and 0 for false
  kube-verify-ssl: "BASE64_VALUE"        # Use 1 for true and 0 for false
  cadvisor-host: "BASE64_VALUE"          # IP address or domain of the cluster master cAdvisor host
  cadvisor-port: "BASE64_VALUE"          # cAdvisor port (usually 4194)
---
apiVersion: v1
kind: Secret
metadata:
  name: on-premise-secret
  namespace: 6fusion-kubernetes-collector
data:
  host: "BASE64_VALUE="            # IP address or domain of the 6fusion On Premise API server
  port: "BASE64_VALUE"             # Port of the 6fusion On Premise API server
  token: "BASE64_VALUE"            # Token to access the 6fusion On Premise API server (leave the empty string if no token is to be used)
  use-ssl: "BASE64_VALUE"          # Use 1 for true and 0 for false
  verify-ssl: "BASE64_VALUE"       # Use 1 for true and 0 for false
  data-age-period: "BASE64_VALUE"  # Age period of data for clean cache. Must be in minutes
  organization-id: "BASE64_VALUE"  # Organization ID of the one already created in the 6fusion On Premise API server
---
apiVersion: v1
kind: Service
metadata:
  name: k8scollector-master
  namespace: 6fusion-kubernetes-collector
  labels:
    6fusion-app: k8scollector-master
spec:
  ports:
    - port: 27017
      protocol: TCP
      name: k8scollector-master-mongodb
  selector:
    6fusion-app: k8scollector-master
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  name: 6fusion-k8scollector-master
  namespace: 6fusion-kubernetes-collector
  labels:
    6fusion-app: k8scollector-master
spec:
  containers:
  - name: k8scollector-inventory
    image: 6fusion/k8collector-inventory # Docker image of the 6fusion Kubernetes Inventory Collector
    volumeMounts:
    - name: kube-secret
      mountPath: /var/run/secrets/k8scollector/kube
    - name: on-premise-secret
      mountPath: /var/run/secrets/k8scollector/on-premise
  - name: k8scollector-onpremise
    image: 6fusion/k8collector-onpremise # Docker image of the 6fusion Kubernetes On-Premise Connector
    volumeMounts:
    - name: on-premise-secret
      mountPath: /var/run/secrets/k8scollector/on-premise
  - name: k8scollector-cleancache
    image: 6fusion/k8collector-cleancache # Docker image of the 6fusion Kubernetes Clean Cache db
    volumeMounts:
    - name: on-premise-secret
      mountPath: /var/run/secrets/k8scollector/on-premise
  - name: k8scollector-mongodb
    image: mongo:3.2
    volumeMounts:
    - mountPath: /data/db
      name: "k8scollector-mongodb"
  volumes:
  - name: kube-secret
    secret:
      secretName: kube-secret
  - name: on-premise-secret
    secret:
      secretName: on-premise-secret
  - name: "k8scollector-mongodb"
    hostPath:
      path: "/var/lib/k8scollector/data/db"
  imagePullSecrets:
    - name: registry-pull-secret
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: 6fusion-k8scollector-metrics
  namespace: 6fusion-kubernetes-collector
  labels:
    6fusion-app: k8scollector-metrics
spec:
  replicas: 2  # Set the amount of metrics collectors replicas (default 2)
  selector:
    6fusion-app: k8scollector-metrics
  template:
    metadata:
      name: 6fusion-k8scollector-metrics
      labels:
        6fusion-app: k8scollector-metrics
    spec:
      containers:
      - name: k8scollector-metrics
        image: 6fusion/k8collector-metrics # Docker image of the 6fusion Kubernetes Metrics Collector
        volumeMounts:
        - name: kube-secret
          mountPath: /var/run/secrets/k8scollector/kube
      volumes:
      - name: kube-secret
        secret:
          secretName: kube-secret
      imagePullSecrets:
        - name: registry-pull-secret
