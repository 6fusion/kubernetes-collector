apiVersion: v1
kind: ServiceAccount
metadata:
  name: 6fusion-k8scollector
  namespace: 6fusion-system
---
apiVersion: v1
kind: Secret
metadata:
  name: kube-secret
  namespace: 6fusion-system
data:
  kube-host: "MTcyLjE3LjguMjAxCg=="  # IP address or domain of the kubernetes API server
  kube-port: "ODA4MAo="              # Port of the kubernetes API server
  kube-token: ""                     # Token of the kubernetes API server (specify only for remote clusters)
  kube-use-ssl: "MAo="               # Use 1 for true and 0 for false
  kube-verify-ssl: "MAo="            # Use 1 for true and 0 for false
  cadvisor-host: "MTcyLjE3LjguMjAxCg=="
  cadvisor-port: "NDE5NAo="          # cAdvisor port (usually 4194)
---
apiVersion: v1
kind: Secret
metadata:
  name: on-premise-secret
  namespace: 6fusion-system
data:
  host: "MTcyLjE3LjguMjAxCg=="  # IP address or domain of the 6fusion On Premise API server
  port: "ODAK"                  # Port of the 6fusion On Premise API server
  token: ""                     # Token to access the 6fusion On Premise API server
  use-ssl: "MAo="               # Use 1 for true and 0 for false
  verify-ssl: "MAo="            # Use 1 for true and 0 for false
  organization-id: "Nzc2MTYzLTQ1MTZmNzlkNGZmYzQwNzU4ODIzYjQyZGZmYWJlYjQwCg=="  # Organization ID of the one already created in the 6fusion On Premise API server
---
apiVersion: v1
kind: Service
metadata:
  name: k8scollector-master
  namespace: 6fusion-system
  labels:
    6fusion-app: k8scollector-master
spec:
  ports:
    - port: 27017
      protocol: TCP
      name: k8scollector-master-mongodb
  selector:
    6fusion-app: k8scollector-master
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  name: 6fusion-k8scollector-master
  namespace: 6fusion-system
  labels:
    6fusion-app: k8scollector-master
spec:
  containers:
  - name: k8scollector-inventory
    image: 172.17.8.201:5000/k8scollector-inventory # Docker image of the 6fusion Kubernetes Inventory Collector
    volumeMounts:
    - name: kube-secret
      mountPath: /var/run/secrets/k8scollector/kube
    - name: on-premise-secret
      mountPath: /var/run/secrets/k8scollector/on-premise
  - name: k8scollector-onpremise
    image: 172.17.8.201:5000/k8scollector-onpremise # Docker image of the 6fusion Kubernetes On-Premise Connector
    volumeMounts:
    - name: on-premise-secret
      mountPath: /var/run/secrets/k8scollector/on-premise
  - name: k8scollector-mongodb
    image: mongo:3.2
    volumeMounts:
    - mountPath: /data/db
      name: "k8scollector-mongodb"
  volumes:
  - name: kube-secret
    secret:
      secretName: kube-secret
  - name: on-premise-secret
    secret:
      secretName: on-premise-secret
  - name: "k8scollector-mongodb"
    hostPath:
      path: "/var/lib/k8scollector/data/db"
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: 6fusion-k8scollector-metrics
  namespace: 6fusion-system
  labels:
    6fusion-app: k8scollector-metrics
spec:
  replicas: 2
  selector:
    6fusion-app: k8scollector-metrics
  template:
    metadata:
      name: 6fusion-k8scollector-metrics
      labels:
        6fusion-app: k8scollector-metrics
    spec:
      containers:
      - name: k8scollector-metrics
        image: 172.17.8.201:5000/k8scollector-metrics # Docker image of the 6fusion Kubernetes Metrics Collector
        volumeMounts:
        - name: kube-secret
          mountPath: /var/run/secrets/k8scollector/kube
      volumes:
      - name: kube-secret
        secret:
          secretName: kube-secret

# ORIGINAL YAML FILE TEMPORARY BACKUP
#
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: 6fusion-k8scollector
#   namespace: 6fusion-system
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: kube-secret
#   namespace: 6fusion-system
# data:
#   kube-host: "MTAuMy4wLjEK"  # IP address or domain of the kubernetes API server
#   kube-port: "NDQzCg=="              # Port of the kubernetes API server
#   kube-token: ""                     # Token of the kubernetes API server (specify only for remote clusters)
#   kube-use-ssl: "MQo="               # Use 1 for true and 0 for false
#   kube-verify-ssl: "MAo="            # Use 1 for true and 0 for false
#   cadvisor-host: "MTAuMC4wLjE4Ngo="
#   cadvisor-port: "NDE5NAo="          # cAdvisor port (usually 4194)
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: on-premise-secret
#   namespace: 6fusion-system
# data:
#   host: "YTA2ZDFiY2E2MjgyNDExZTZhNDRhMTI0ZDhlMmY0ZjgtNDQ4NTM0NDM5LnVzLWVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbQo="  # IP address or domain of the 6fusion On Premise API server
#   port: "ODAK"                  # Port of the 6fusion On Premise API server
#   token: ""                     # Token to access the 6fusion On Premise API server
#   use-ssl: "MAo="               # Use 1 for true and 0 for false
#   verify-ssl: "MAo="            # Use 1 for true and 0 for false
#   organization-id: "Nzc2MTYzLWI3NTkzNDRiN2FiYTQyMjQ5ZmQyZGQ0YWVjMDc1NTljCg=="  # Organization ID of the one already created in the 6fusion On Premise API server
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: 6fusion-k8scollector
#   namespace: 6fusion-system
#   labels:
#     6fusion-app: k8scollector
# spec:
#   containers:
#   - name: k8scollector
#     image: 6fusion/kubernetes-collector:0.1.3  # Docker image of the 6fusion Kubernetes Collector
#     volumeMounts:
#     - name: kube-secret
#       mountPath: /var/run/secrets/k8scollector/kube
#     - name: on-premise-secret
#       mountPath: /var/run/secrets/k8scollector/on-premise
#   - name: k8scollector-mongodb
#     image: mongo:3.2
#     volumeMounts:
#     - mountPath: /data/db
#       name: "k8scollector-mongodb"
#   volumes:
#   - name: on-premise-secret
#     secret:
#       secretName: on-premise-secret
#   - name: kube-secret
#     secret:
#       secretName: kube-secret
#   - name: "k8scollector-mongodb"
#     hostPath:
#       path: "/var/lib/k8scollector/data/db"
