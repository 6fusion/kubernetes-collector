apiVersion: v1
kind: Namespace         # Create this namespace just in case this collector is not in the same node as the On Premise API.
metadata:               # If it already exists, k8s just shows the error but it won't harm the rest of the items on this file.
  name: 6fusion-system
---
apiVersion: v1
kind: Secret
metadata:
  name: kube-secret
  namespace: 6fusion-system
data:
  kube-host: "MTcyLjE3LjguMjAxCg=="
  kube-port: "ODA4MAo="
  kube-token: ""
  kube-use-ssl: "MAo="     # Use 1 for true and 0 for false
  kube-verify-ssl: "MAo="  # Use 1 for true and 0 for false
  cadvisor-port: "NDE5NAo="
---
apiVersion: v1
kind: Secret
metadata:
  name: on-premise-secret
  namespace: 6fusion-system
data:
  host: "MTcyLjE3LjguMjAxCg=="
  port: "ODAK"
  token: ""
  use-ssl: "MAo="     # Use 1 for true and 0 for false
  verify-ssl: "MAo="  # Use 1 for true and 0 for false
  organization-id: "Nzc2MTYzLTU1ODQ0NDUyYzg0MjQzMTdhMjBhNzA3N2ZkYTIyNTg4Cg=="
---
apiVersion: v1
kind: Pod
metadata:
  name: 6fusion-k8scollector
  namespace: 6fusion-system
  labels:
    6fusion-app: k8scollector
spec:
  containers:
  - name: k8scollector
    image: 172.17.8.201:5000/k8scollector
    volumeMounts:
    - name: k8scollector-app
      mountPath: /usr/src/app
    - name: kube-secret
      mountPath: /var/run/secrets/k8scollector/kube
    - name: on-premise-secret
      mountPath: /var/run/secrets/k8scollector/on-premise
  - name: k8scollector-mongodb
    #image: 172.17.8.201:5000/k8scollector-mongodb
    image: mongo:3.2
    volumeMounts:
    - mountPath: /data/db
      name: "k8scollector-mongodb"
  volumes:
  - name: k8scollector-app
    hostPath:
      path: "/home/k8scollector"
  - name: on-premise-secret
    secret:
      secretName: on-premise-secret
  - name: kube-secret
    secret:
      secretName: kube-secret
  - name: "k8scollector-mongodb"
    hostPath:
      path: "/var/lib/k8scollector/data/db"
